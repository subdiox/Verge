(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{136:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return p}));var a=n(2),r=n(9),c=(n(0),n(171)),i={id:"changes",title:"Changes object - helps detecting differences and reduces copy-cosuming",sidebar_label:"Changes object"},o={id:"VergeStore/changes",isDocsHomePage:!1,title:"Changes object - helps detecting differences and reduces copy-cosuming",description:"Update UI from State",source:"@site/docs/VergeStore/changes.md",permalink:"/Verge/docs/VergeStore/changes",editUrl:"https://github.com/VergeGroup/Verge/docs/docs/VergeStore/changes.md",sidebar_label:"Changes object",sidebar:"docs",previous:{title:"State - a data describes the current state of the app",permalink:"/Verge/docs/VergeStore/state"},next:{title:"Extended Computed property on the State",permalink:"/Verge/docs/VergeStore/extended-computed-property"}},s=[{value:"Update UI from State",id:"update-ui-from-state",children:[]},{value:"Update UI when only the state changed",id:"update-ui-when-only-the-state-changed",children:[]},{value:"Subscribing the state",id:"subscribing-the-state",children:[]},{value:"Make Changes object the first-time value",id:"make-changes-object-the-first-time-value",children:[]}],l={rightToc:s};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(c.b)("wrapper",Object(a.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"update-ui-from-state"},"Update UI from State"),Object(c.b)("p",null,"In subscribing the state and binding UI, it's most important to reduce the meaningless time to update UI."),Object(c.b)("p",null,"What things are the meaningless? that is the update UI which contains no updates."),Object(c.b)("p",null,"Basically, we can do this like followings"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-swift"}),"func updateUI(newState: State) {\n  if self.label.text != newState.name {\n    self.label.text = newState.name\n  }\n}\n")),Object(c.b)("p",null,"Although, this approach make the code a little bit complicated by increasing the code to update UI."),Object(c.b)("h2",{id:"update-ui-when-only-the-state-changed"},"Update UI when only the state changed"),Object(c.b)("p",null,"Store provides ",Object(c.b)("inlineCode",{parentName:"p"},"Changes<State>")," object.\nIt provides some functions to get the value from state with condition."),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-swift"}),"let store: Store<MyState, Never>\n\nlet changes: Changes<MyState> = store.changes\n\nchanges.ifChanged(\\.name) { name in\n  // called only name changed\n}\n")),Object(c.b)("h2",{id:"subscribing-the-state"},"Subscribing the state"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-swift"}),"class ViewController: UIViewController {\n\n  var subscriptions = Set<UntilDeinitCancellable>()\n\n  let store: MyStore<MyState, MyActivity>\n\n  override func viewDidLoad() {\n\n    super.viewDidLoad()\n\n    store.sinkChanges { [weak self] (changes) in\n      // it will be called on the thread which committed\n      self?.update(changes: changes)\n    }\n    .store(in: &subscriptions)\n  }\n\n  private func update(changes: Changes<MyState> {\n    changes.ifChanged(\\.name) { name in\n      // called only name changed\n    }\n    ...\n  }\n\n}\n")),Object(c.b)("h2",{id:"make-changes-object-the-first-time-value"},"Make Changes object the first-time value"),Object(c.b)("p",null,"If you have a ",Object(c.b)("inlineCode",{parentName:"p"},"Changes")," from anywhere, it might have previous value,",Object(c.b)("br",{parentName:"p"}),"\n","Using ",Object(c.b)("inlineCode",{parentName:"p"},"ifChanged")," might return false because compared with the previous one.",Object(c.b)("br",{parentName:"p"}),"\n","You can create the Changed object that always returns true from ",Object(c.b)("inlineCode",{parentName:"p"},"ifChanged")," with followings:"),Object(c.b)("pre",null,Object(c.b)("code",Object(a.a)({parentName:"pre"},{className:"language-swift"}),"let changes: Changes<State>\n\nlet firstTimeChanges: Changes<State> = changes.droppedPrevious()\n")))}p.isMDXComponent=!0},171:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return h}));var a=n(0),r=n.n(a);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},c=Object.keys(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(a=0;a<c.length;a++)n=c[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=r.a.createContext({}),p=function(e){var t=r.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=p(e.components);return r.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,c=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),u=p(n),b=a,h=u["".concat(i,".").concat(b)]||u[b]||d[b]||c;return n?r.a.createElement(h,o(o({ref:t},l),{},{components:n})):r.a.createElement(h,o({ref:t},l))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var c=n.length,i=new Array(c);i[0]=b;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var l=2;l<c;l++)i[l]=n[l];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);